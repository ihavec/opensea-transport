#
# Do NOT modify or remove this copyright and license
#
# Copyright (c) 2012 - 2019 Seagate Technology LLC and/or its Affiliates, All Rights Reserved
#
# This software is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# ******************************************************************************************

# Hand Written Makefile (Edit with caution) -Muhammad
# Windows, MSYS2 64-bit, MinGW 64-bit, gcc environment version - Billy
# the applications use opensea-transport version in the banner.  The build date in the banner is based
# on the compile date of openseachest_util_options.o Use make --always-make to Unconditionally make all targets.

NAME = opensea-transport
#Change the Major version when major interface changes are made. E.g. tDevice changes
MAJOR = 1
#Change the Minor version when new features are added.
MINOR = 19
#Change the patch version when only bug fixes are made.
PATCH = 0
VERSION = $(MAJOR).$(MINOR).$(PATCH)
SRC_DIR = ../../src/
INC_DIR = -I../../include -I../../include/vendor -I../../../opensea-common/include

MYUNAME := $(shell uname -s)
ifneq (,$(findstring Linux,$(MYUNAME)))
	UNAME = MINGW64
else ifneq (,$(findstring MINGW64,$(MYUNAME)))
	UNAME = MINGW64
endif

ifneq (,$(findstring Linux,$(MYUNAME)))
	CC = x86_64-w64-mingw32-gcc
	AR = x86_64-w64-mingw32-ar
else
	CC = gcc
	AR = ar
endif

CFLAGS ?= -Wall
#BR note: If you want to hide all of the informational compiler messages, uncomment the line below
CFLAGS += -Wno-incompatible-pointer-types
CFLAGS += -c -fPIC -I. -std=gnu99

LDFLAGS = -Wall
LDLIBS = ../../../opensea-common/Make/gccWin/$(FILE_OUTPUT_DIR)/libopensea-common.a

ifneq (,$(findstring MINGW64,$(UNAME)))
	#BR note: pragma comment(lib,"Version.lib") is not supported by gcc, use the below supply the version.lib functions
	LDFLAGS += -L/msys64/mingw64/x86_64-w64-mingw32/lib
	LDLIBS += -lversion
	LDLIBS += -lcfgmgr32
endif

LIB_SRC_FILES = \
	$(SRC_DIR)ata_cmds.c\
	$(SRC_DIR)ata_helper.c\
	$(SRC_DIR)ata_legacy_cmds.c\
	$(SRC_DIR)cmds.c\
	$(SRC_DIR)common_public.c\
	$(SRC_DIR)csmi_helper.c\
	$(SRC_DIR)cypress_legacy_helper.c\
	$(SRC_DIR)nec_legacy_helper.c\
	$(SRC_DIR)nvme_cmds.c\
	$(SRC_DIR)nvme_helper.c\
	$(SRC_DIR)prolific_legacy_helper.c\
	$(SRC_DIR)psp_legacy_helper.c\
	$(SRC_DIR)sat_helper.c\
	$(SRC_DIR)scsi_cmds.c\
	$(SRC_DIR)scsi_helper.c\
	$(SRC_DIR)ti_legacy_helper.c\
	$(SRC_DIR)usb_hacks.c\
	$(SRC_DIR)win_helper.c\
	$(SRC_DIR)sntl_helper.c

PROJECT_DEFINES += -DSTATIC_OPENSEA_TRANSPORT
PROJECT_DEFINES += -D_CRT_SECURE_NO_WARNINGS
PROJECT_DEFINES += -DENABLE_CSMI
PROJECT_DEFINES += -DWIN_API_TARGET_VERSION=100162990L #-D_DEBUG
ifneq (,$(findstring Linux,$(MYUNAME)))
	PROJECT_DEFINES += -DDISABLE_NVME_PASSTHROUGH
else
	PROJECT_DEFINES += #-DDISABLE_NVME_PASSTHROUGH
endif

ifneq (,$(findstring MINGW64,$(UNAME)))
	PROJECT_DEFINES += -D__MINGW64__
	# PROJECT_DEFINES += -D__MINGW32__
	#BR note: trying different stuff during debugging
	# PROJECT_DEFINES += -D_CRT_NONSTDC_NO_DEPRECATE
	#BR note: -D_WIN32_WINNT=0x0601 fixes unknown Windows version in winioctl.h and  error: 'BusTypeSata' undeclared (first use in this function)
	PROJECT_DEFINES += -D_WIN32_WINNT=0x0601
	# PROJECT_DEFINES += -DWIN_API_TARGET_VERSION=100150630L
	# PROJECT_DEFINES += -DWIN_API_TARGET_VERSION=81000000L
	# PROJECT_DEFINES += -DWINVER=SEA_WIN32_WINNT_WIN10
endif

#All of the source files have associated object files
LIB_OBJ_FILES = $(LIB_SRC_FILES:.c=.o)
LIBS = lib$(NAME).a
#DEPFILES = $(LIB_SRC_FILES:.c=.d)

#-include $(DEPFILES)

FILE_OUTPUT_DIR = lib

.PHONY: all
all: clean mkoutputdir $(LIBS)

opensea-libs:
#	$(MAKE) -C ../../../opensea-common/Make/gccWin -f Makefile.gccWin

%.o: %.c
	$(CC) $(CFLAGS) $(PROJECT_DEFINES) $(INC_DIR) $< -o $@

$(LIBS): $(LIB_OBJ_FILES) opensea-libs
	rm -f $(FILE_OUTPUT_DIR)/$@
	$(AR) cq $(FILE_OUTPUT_DIR)/$@ $(LIB_OBJ_FILES)

	$(CC) -shared $(LIB_OBJ_FILES) $(LDFLAGS) $(LDLIBS) -o $(FILE_OUTPUT_DIR)/lib$(NAME).so.$(VERSION)
#	cd $(FILE_OUTPUT_DIR) && ln -s lib$(NAME).so* lib$(NAME).so

clean:
	rm -f $(FILE_OUTPUT_DIR)/lib$(NAME).a $(FILE_OUTPUT_DIR)/lib$(NAME).so* *.o $(SRC_DIR)*.o
	rm -rf $(FILE_OUTPUT_DIR)

mkoutputdir:
	mkdir -p $(FILE_OUTPUT_DIR)
